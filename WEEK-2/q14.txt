In JavaScript, functions are blocks of code designed to perform a specific task.
 They are reusable and can be called as many times as needed throughout your code.
  Functions can accept inputs called parameters and can return a value as an output.
  
Defining a Function
To define a function, you use the function keyword, followed by a name, a list of parameters enclosed in parentheses, and a block of code enclosed in curly braces. 
Here's an example:

javascript
function sayHello(name) {
  console.log("Hello, " + name + "!");
}

Calling a Function

javascript
sayHello("Alice"); 
Function with Return Value
Functions can also return a value using the return keyword.
 Here's an example of a function that calculates the square of a number:

javascript
function square(number) {
  return number * number;
}

let result = square(5);
console.log(result); // Output: 25
Arrow Functions

Another method of define a function
javascript
const add = (a, b) => {
  return a + b;
};

let sum = add(3, 4);
console.log(sum); // Output: 7
Function Expressions
Functions can also be defined as expressions and assigned to variables.
 These are called function expressions:

javascript
const multiply = function(a, b) {
  return a * b;
  };

let product = multiply(3, 4);
console.log(product); // Output: 12